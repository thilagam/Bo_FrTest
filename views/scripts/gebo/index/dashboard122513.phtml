{literal}
<!--<script type="text/javascript">
$(document).ready(function() {
gebo_peity.init();
});
gebo_peity = {
		init: function() {
			$.fn.peity.defaults.line = {
				strokeWidth: 1,
				delimeter: ",",
				height: 32,
				max: null,
				min: 0,
				width: 50
			};
			$.fn.peity.defaults.bar = {
				delimeter: ",",
				height: 32,
				max: null,
				min: 0,
				width: 50
			};
			$(".p_bar_up").peity("bar",{
				colour: "#6cc334"
			});
			$(".p_bar_down").peity("bar",{
				colour: "#e11b28"
			});
			$(".p_line_up").peity("line",{
				colour: "#b4dbeb",
				strokeColour: "#3ca0ca"
			});
			$(".p_line_down").peity("line",{
				colour: "#f7bfc3",
				strokeColour: "#e11b28"
			});
		}
	};
</script>-->

{/literal}

<div class="row-fluid">
	<div class="span12 tac">
		<ul class="ov_boxes">
			<li>
				<div class="p_bar_up p_canvas"><img src="/BO/theme/gebo/img/gCons/agent.png" alt="" /></div>
				<div class="ov_text">
					<strong>{$totalActiveClients}</strong>
					Clients
				</div>
			</li>
			<li>
				<div class="p_bar_down p_canvas"><img src="/BO/theme/gebo/img/gCons/agent.png" alt="" /></div>
				<div class="ov_text">
					<strong>{$totalActiveWriters}</strong>
					R&eacute;dacteurs
				</div>
			</li>
			<li>
				<div class="p_line_up p_canvas"><img src="/BO/theme/gebo/img/gCons/addressbook.png" alt="" /></div>
				<div class="ov_text">
					<strong>{$TotalDeliveries}</strong>
					Missions
				</div>
			</li>
			<li>
				<div class="p_line_down p_canvas"><img src="/BO/theme/gebo/img/gCons/copy-item.png" alt="" /></div>
				<div class="ov_text">
					<strong>{$TotalArticles}</strong>
					Articles
				</div>
			</li>
		</ul>
	</div>
</div>

<div class="row-fluid">
	<div class="span12">
		<ul class="dshb_icoNav tac">
			<li><a href="/user/users-list?submenuId=ML2-SL7" style="background-image: url(/BO/theme/gebo/img/gCons/multi-agents.png)">Users</a></li>
			<li><a href="/ao/ao-create1?submenuId=ML2-SL3" style="background-image: url(/BO/theme/gebo/img/gCons/edit.png)">Create AO</a></li>

			<li><a href="/ongoing/list?submenuId=ML2-SL4" style="background-image: url(/BO/theme/gebo/img/gCons/add-item.png)">Suivi des missions</a></li>
			<li><a href="/processao/profiles-list?submenuId=ML2-SL2" style="background-image: url(/BO/theme/gebo/img/gCons/ID.png)">S&eacute;lection de profils</a></li>
		    <li><a href="/user/users-list?submenuId=ML2-SL7&tab=permissionstab" style="background-image: url(/BO/theme/gebo/img/gCons/configuration.png)">Permissions</a></li>
			
			<!--<li><a href="javascript:void(0)" style="background-image: url(img/gCons/add-item.png)"> Add New Page</a></li>-->
			<li><a href="/mails/contactus?submenuId=ML4-SL9" style="background-image: url(/BO/theme/gebo/img/gCons/processing-02.png)">Service client</a></li>
		</ul>
	</div>
</div>

<div class="row-fluid">
	<div class="span3"></div>
    <div class="span6">
        <div class="heading clearfix">
            <h3 class="pull-left">Nouveaux Inscrits sur la plateforme</h3>
            <span class="span4 pull-right">
                <span class="dailyChart" style="font-weight:bold;">Daily | </span>
                <span class="weeklyChart">Weekly | </span>
                <span class="monthlyChart">Monthly</span>
            </span>
        </div>
        <div id="dailyGraph" style="height:270px;width:100%;margin:15px auto 0"></div>
        <div id="weeklyGraph" style="display:none;height:270px;width:100%;margin:15px auto 0"></div>
        <div id="monthlyGraph" style="display:none;height:270px;width:100%;margin:15px auto 0"></div>
    </div>
	<div class="span3"></div>
</div> 

{literal}
<script>
    $(document).ready(function() {
        //* charts
        gebo_charts.fl_d();
        gebo_charts.fl_w();
        gebo_charts.fl_m();
    });

    //* charts
    gebo_charts = {
        
        fl_d : function() {
            
            // Setup the placeholder reference
            var elem = $('#dailyGraph');
            
            {/literal}{$dates}{literal}

            for (var i = 0; i < d2.length; ++i) {d2[i][0] += 60 * 120 * 1000};

            var options = {
                lines: { show: true },
                points: { show: true },
                yaxes: [
                    {min: 0},
                    {max: 50},
                    {position: "left"}
                ],
                xaxis: {
                    mode: "time",
                    timeformat: "%b %d",
                    minTickSize: [1, "day"],
                    autoscaleMargin: 0.10
                    
                },
                grid: { hoverable: true },
                legend: { position: 'nw' },
                colors: [ "#3ca0ca" ]
            };

            // Setup the flot chart using our data
            fl_d_plot = $.plot(elem,
                [
                    {   data: d2,
                        label: "Users",
                        yaxis: 2,
                        points: { show: true },
                        stack: null
                    }
                ], options);
            
            // Create a tooltip on our chart
            elem.qtip({
                prerender: true,
                content: 'Loading...', // Use a loading message primarily
                position: {
                    viewport: $(window), // Keep it visible within the window if possible
                    target: 'mouse', // Position it in relation to the mouse
                    adjust: { x: 7 } // ...but adjust it a bit so it doesn't overlap it.
                },
                show: false, // We'll show it programatically, so no show event is needed
                style: {
                    classes: 'ui-tooltip-shadow ui-tooltip-tipsy',
                    tip: false // Remove the default tip.
                }
            });
         
            // Bind the plot hover
            elem.on('plothover', function(event, coords, item) {
                // Grab the API reference
                var self = $(this),
                    api = $(this).qtip(),
                    previousPoint, content,
         
                // Setup a visually pleasing rounding function
                round = function(x) { return Math.round(x * 1000) / 1000; };
         
                // If we weren't passed the item object, hide the tooltip and remove cached point data
                if(!item) {
                    api.cache.point = false;
                    return api.hide(event);
                }
                
                // Proceed only if the data point has changed
                previousPoint = api.cache.point;
                if(previousPoint !== item.seriesIndex)
                {
                    // Update the cached point data
                    api.cache.point = item.seriesIndex;
                    
                    // Setup new content
                    content = item.series.label +': '+ round(item.datapoint[1]);
         
                    // Update the tooltip content
                    api.set('content.text', content);
         
                    // Make sure we don't get problems with animations
                    api.elements.tooltip.stop(1, 1);
         
                    // Show the tooltip, passing the coordinates
                    api.show(coords);
                }
            });
        }, 
        fl_w : function() {
            
            // Setup the placeholder reference
            var elem = $('#weeklyGraph');
            
            {/literal}{$week_dates}{literal}

            for (var i = 0; i < d2.length; ++i) {d2[i][0] += 60 * 120 * 1000};

            var options = {
                lines: { show: true },
                points: { show: true },
                yaxes: [
                    {min: 0},
                    {max: 100},
                    {position: "left"}
                ],
                xaxis: {
                    mode: "time",
                    timeformat: "%b %d",
                    minTickSize: [7, "day"],
                    autoscaleMargin: 0.10
                    
                },
                grid: { hoverable: true },
                legend: { position: 'nw' },
                colors: [ "#3ca0ca" ]
            };

            // Setup the flot chart using our data
            fl_d_plot = $.plot(elem,
                [
                    {   data: d2,
                        label: "Users",
                        yaxis: 2,
                        points: { show: true },
                        stack: null
                    }
                ], options);
            
            // Create a tooltip on our chart
            elem.qtip({
                prerender: true,
                content: 'Loading...', // Use a loading message primarily
                position: {
                    viewport: $(window), // Keep it visible within the window if possible
                    target: 'mouse', // Position it in relation to the mouse
                    adjust: { x: 7 } // ...but adjust it a bit so it doesn't overlap it.
                },
                show: false, // We'll show it programatically, so no show event is needed
                style: {
                    classes: 'ui-tooltip-shadow ui-tooltip-tipsy',
                    tip: false // Remove the default tip.
                }
            });
         
            // Bind the plot hover
            elem.on('plothover', function(event, coords, item) {
                // Grab the API reference
                var self = $(this),
                    api = $(this).qtip(),
                    previousPoint, content,
         
                // Setup a visually pleasing rounding function
                round = function(x) { return Math.round(x * 1000) / 1000; };
         
                // If we weren't passed the item object, hide the tooltip and remove cached point data
                if(!item) {
                    api.cache.point = false;
                    return api.hide(event);
                }
                
                // Proceed only if the data point has changed
                previousPoint = api.cache.point;
                if(previousPoint !== item.seriesIndex)
                {
                    // Update the cached point data
                    api.cache.point = item.seriesIndex;
                    
                    // Setup new content
                    content = item.series.label +': '+ round(item.datapoint[1]);
         
                    // Update the tooltip content
                    api.set('content.text', content);
         
                    // Make sure we don't get problems with animations
                    api.elements.tooltip.stop(1, 1);
         
                    // Show the tooltip, passing the coordinates
                    api.show(coords);
                }
            });
        }, 
        fl_m : function() {
            
            // Setup the placeholder reference
            var elem = $('#monthlyGraph');

            {/literal}{$mnth_dates}{literal}

            for (var i = 0; i < d2.length; ++i) {d2[i][0] += 60 * 120 * 1000};

            var options = {
                lines: { show: true },
                points: { show: true },
                yaxes: [
                    {min: 0},
                    {max: 400},
                    {position: "left"}
                ],
                xaxis: {
                    mode: "time",
                    timeformat: "%b %y",
                    minTickSize: [1, "month"],
                    autoscaleMargin: 0.10
                    
                },
                grid: { hoverable: true },
                legend: { position: 'nw' },
                colors: [ "#3ca0ca" ]
            };

            // Setup the flot chart using our data
            fl_d_plot = $.plot(elem,
                [
                    {   data: d2,
                        label: "Users",
                        yaxis: 2,
                        points: { show: true },
                        stack: null
                    }
                ], options);
            
            // Create a tooltip on our chart
            elem.qtip({
                prerender: true,
                content: 'Loading...', // Use a loading message primarily
                position: {
                    viewport: $(window), // Keep it visible within the window if possible
                    target: 'mouse', // Position it in relation to the mouse
                    adjust: { x: 7 } // ...but adjust it a bit so it doesn't overlap it.
                },
                show: false, // We'll show it programatically, so no show event is needed
                style: {
                    classes: 'ui-tooltip-shadow ui-tooltip-tipsy',
                    tip: false // Remove the default tip.
                }
            });
         
            // Bind the plot hover
            elem.on('plothover', function(event, coords, item) {
                // Grab the API reference
                var self = $(this),
                    api = $(this).qtip(),
                    previousPoint, content,
         
                // Setup a visually pleasing rounding function
                round = function(x) { return Math.round(x * 1000) / 1000; };
         
                // If we weren't passed the item object, hide the tooltip and remove cached point data
                if(!item) {
                    api.cache.point = false;
                    return api.hide(event);
                }
                
                // Proceed only if the data point has changed
                previousPoint = api.cache.point;
                if(previousPoint !== item.seriesIndex)
                {
                    // Update the cached point data
                    api.cache.point = item.seriesIndex;
                    
                    // Setup new content
                    content = item.series.label +': '+ round(item.datapoint[1]);
         
                    // Update the tooltip content
                    api.set('content.text', content);
         
                    // Make sure we don't get problems with animations
                    api.elements.tooltip.stop(1, 1);
         
                    // Show the tooltip, passing the coordinates
                    api.show(coords);
                }
            });
        }
        
    };

    $('.dailyChart').click(function () {
        $('.dailyChart').css( "font-weight", "bold" );
        $('.weeklyChart').css( "font-weight", "normal" );$('#weeklyGraph').hide();
        $('.monthlyChart').css( "font-weight", "normal" );$('#monthlyGraph').hide();
        $('#dailyGraph').show();
    });
    $('.weeklyChart').click(function () {
        $('.weeklyChart').css( "font-weight", "bold" );
        $('.dailyChart').css( "font-weight", "normal" );$('#dailyGraph').hide();
        $('.monthlyChart').css( "font-weight", "normal" );$('#monthlyGraph').hide();
        $('#weeklyGraph').show();
    });
    $('.monthlyChart').click(function () {
        $('.monthlyChart').css( "font-weight", "bold" );
        $('.weeklyChart').css( "font-weight", "normal" );$('#dailyGraph').hide();
        $('.dailyChart').css( "font-weight", "normal" );$('#weeklyGraph').hide();
        $('#monthlyGraph').show();
    });
</script>
<style>#dailyGraph, #weeklyGraph, #monthlyGraph {height: 270px; width: 90%; margin: 15px auto 0px; padding: 0px; position: relative;}</style>
{/literal}
